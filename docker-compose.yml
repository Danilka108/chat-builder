version: '3.5'

services:
    certbot:
        image: "certbot/certbot"
        container_name: certbot
        volumes:
            - certbot-etc:/etc/letsencrypt
            - certbot-var:/var/lib/letsencrypt
            - web-root:/var/www/html
        depends_on:
            - webserver
        command: certonly --webroot --webroot-path=/var/www/html --email support@venerdichat.ru --agree-tos --no-eff-email --force-renewal -d venerdichat.ru -d www.venerdichat.ru

    webserver:
        image: "nginx:mainline-alpine"
        container_name: webserver
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf:ro
            - web-root:/var/www/html
            - certbot-etc:/etc/letsencrypt
            - certbot-var:/var/lib/letsencrypt
            - dhparam:/etc/ssl/certs
        depends_on:
            - webapp
        networks:
            - app-network

    redis:
        container_name: redis
        restart: unless-stopped
        image: "redis:alpine"
        networks: 
            - app-network

    postgres:
        container_name: postgres
        image: "postgres:alpine"
        environment:
            POSTGRES_USER: "${DB_USER}"
            POSTGRES_PASSWORD: "${DB_PASSWORD}"
            POSTGRES_DB: "${DB_NAME}"
            PGDATA: /data/postgres
        volumes:
            - postgres:/data/postgres
        restart: unless-stopped
        networks: 
            - app-network

    webapp:
        container_name: webapp
        build: .
        restart: unless-stopped
        env_file: .env
        depends_on:
            - postgres
            - redis
        networks: 
            - app-network

volumes:
    web-root:
        driver: local
        driver_opts:
            type: none
            device: "${WEB_ROOT_DIRECTORY_PATH}"
            o: bind
    dhparam:
        driver: local
        driver_opts:
            type: none
            device: "${DHPARAM_DIRECTORY_PATH}"
            o: bind
    postgres:
    certbot-etc:
    certbot-var:

networks: 
    app-network:
        driver: bridge
